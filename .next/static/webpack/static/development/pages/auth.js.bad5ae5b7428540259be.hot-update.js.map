{"version":3,"file":"static/webpack/static/development/pages/auth.js.bad5ae5b7428540259be.hot-update.js","sources":["webpack:///./store/actions/auth.js"],"sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../services/axios/axios-user';\nimport ability from '../../services/casl/ability';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = (userId, username) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    userId: userId,\n    username: username,\n  }\n}\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n}\n\nexport const authLogout = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  }\n}\n\nexport const logout = () => dispatch => new Promise((resolve, reject) => { \n  const url = '/oauth/revoke';\n  \n  resolve(\n    axios.post(url)\n      .then(response => {\n        sessionStorage.removeItem('token');\n        localStorage.removeItem('username');\n        localStorage.removeItem('userId');\n        ability.update([]);\n        \n        dispatch(authLogout());\n      })\n  );\n});\n\nexport const auth = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    const authData = {\n      username: username,\n      password: password,\n      grant_type: 'password',\n      client_id: process.env.CLIENT_ID,\n      client_secret: process.env.CLIENT_SECRET,\n    }\n\n    const url = '/oauth/token';\n\n    axios.post(url, authData)\n      .then(response => {\n        sessionStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('username', response.data.user.username);\n        localStorage.setItem('userId', response.data.user.userId);\n        ability.update(response.data.user.rules);\n\n        dispatch(authSuccess(\n          response.data.user.userId, \n          response.data.user.username, \n        ));\n      })\n      .catch(err => {\n        console.log(err.response)\n        dispatch(authFail(err.response.data.errors));\n      })\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAdA;AAAA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}