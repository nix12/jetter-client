{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar initialState = {\n  currentUser: {\n    userId: null,\n    username: null,\n    loading: false,\n    error: null\n  }\n};\n\nvar authStart = function authStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar authSuccess = function authSuccess(state, action) {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    username: action.username,\n    error: null,\n    loading: false\n  });\n};\n\nvar authFail = function authFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nvar authLogout = function authLogout(state, action) {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    username: null\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/developer/Projects/jetter/client/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","currentUser","userId","username","loading","error","authStart","state","action","authSuccess","token","idToken","authFail","authLogout","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,IADG;AAEXC,IAAAA,QAAQ,EAAE,IAFC;AAGXC,IAAAA,OAAO,EAAE,KAHE;AAIXC,IAAAA,KAAK,EAAE;AAJI;AADM,CAArB;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEF,IAAAA,KAAK,EAAE,IAAT;AAAeD,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACD,CAFD;;AAIA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD,EAAQC,MAAR,EAAmB;AACrC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBG,IAAAA,KAAK,EAAEF,MAAM,CAACG,OADW;AAEzBT,IAAAA,MAAM,EAAEM,MAAM,CAACN,MAFU;AAGzBC,IAAAA,QAAQ,EAAEK,MAAM,CAACL,QAHQ;AAIzBE,IAAAA,KAAK,EAAE,IAJkB;AAKzBD,IAAAA,OAAO,EAAE;AALgB,GAAR,CAAnB;AAOD,CARD;;AAUA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACL,KAAD,EAAQC,MAAR,EAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEF,IAAAA,KAAK,EAAEG,MAAM,CAACH,KAAhB;AAAuBD,IAAAA,OAAO,EAAE;AAAhC,GAAR,CAAnB;AACD,CAFD;;AAIA,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAACN,KAAD,EAAQC,MAAR,EAAmB;AACpC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBG,IAAAA,KAAK,EAAE,IADkB;AAEzBR,IAAAA,MAAM,EAAE,IAFiB;AAGzBC,IAAAA,QAAQ,EAAE;AAHe,GAAR,CAAnB;AAKD,CAND;;AASA,IAAMW,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCP,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAChD,UAAQA,MAAM,CAACO,IAAf;AACE,SAAMjB,WAAW,CAACkB,UAAlB;AAAgC,aAAOV,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAChC,SAAMV,WAAW,CAACmB,YAAlB;AAAkC,aAAOR,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AAClC,SAAMV,WAAW,CAACoB,SAAlB;AAA+B,aAAON,QAAQ,CAACL,KAAD,EAAQC,MAAR,CAAf;;AAC/B,SAAMV,WAAW,CAACqB,WAAlB;AAAiC,aAAON,UAAU,CAACN,KAAD,EAAQC,MAAR,CAAjB;;AACjC;AAAS,aAAOD,KAAP;AALX;AAOD,CARD;;AAUA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n  currentUser: {\n    userId: null,\n    username: null,\n    loading: false,\n    error: null,\n  }\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    username: action.username,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, { error: action.error, loading: false });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    username: null,\n  });\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case (actionTypes.AUTH_START) : return authStart(state, action);\n    case (actionTypes.AUTH_SUCCESS) : return authSuccess(state, action);\n    case (actionTypes.AUTH_FAIL) : return authFail(state, action);\n    case (actionTypes.AUTH_LOGOUT) : return authLogout(state, action);\n    default: return state;\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}