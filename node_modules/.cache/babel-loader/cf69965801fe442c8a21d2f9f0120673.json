{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/developer/Projects/jetter/client/pages/auth/index.js\";\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { connect } from \"react-redux\";\nimport * as actions from '../../store/actions/index';\n\nvar Auth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Auth, _Component);\n\n  function Auth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Auth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Mail Address'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChangedHandler\", function (event, controlName) {\n      var updatedControls = updateObject(_this.state.controls, _defineProperty({}, controlName, updateObject(_this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, _this.state.controls[controlName].validation),\n        touched: true\n      })));\n\n      _this.setState({\n        controls: updatedControls\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitHandler\", function (event) {\n      event.preventDefault();\n\n      _this.props.onAuth(_this.state.controls.email.value, _this.state.controls.password.value, _this.state.isSignup);\n    });\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      });\n\n      if (this.props.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }\n\n      var errorMessage = null;\n\n      if (this.props.error) {\n        errorMessage = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, this.props.error.message);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Auth\"), React.createElement(Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"div\", {\n        className: classes.Auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, authRedirect, errorMessage, React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, form, React.createElement(Button, {\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(Button, {\n        clicked: this.switchAuthModeHandler,\n        btnType: \"Danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"SWITCH TO \", this.state.isSignup ? 'SIGNIN' : 'SIGNUP')));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store,\n          isServer = _ref.isServer,\n          pathname = _ref.pathname,\n          query = _ref.query;\n      store.dispatch({\n        type: 'FOO',\n        payload: 'foo'\n      }); // component will be able to read from store's state when rendered\n\n      return {\n        custom: 'custom'\n      }; // you can pass some custom props to component from here\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(username, password) {\n      return dispatch(actions.auth(username, password));\n    },\n    onLogout: function onLogout() {\n      return dispatch(actions.logout());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/developer/Projects/jetter/client/pages/auth/index.js"],"names":["React","Component","Link","connect","actions","Auth","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","event","controlName","updatedControls","updateObject","state","target","checkValidity","setState","preventDefault","props","onAuth","isSignup","formElementsArray","key","push","id","config","form","map","formElement","inputChangedHandler","loading","errorMessage","error","message","classes","authRedirect","submitHandler","switchAuthModeHandler","store","isServer","pathname","query","dispatch","payload","custom","mapStateToProps","auth","isAuthenticated","token","mapDispatchToProps","username","onLogout","logout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link'\nimport {connect} from \"react-redux\";\n\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Mail Address'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        touched: false\n      }\n    },\n  }\n\n  static getInitialProps({store, isServer, pathname, query}) {\n    store.dispatch({type: 'FOO', payload: 'foo'}); // component will be able to read from store's state when rendered\n    return {custom: 'custom'}; // you can pass some custom props to component from here\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]: updateObject(this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched: true\n      })\n    });\n\n    this.setState({ controls: updatedControls });\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n  }\n\n  render () {\n\n    const formElementsArray = []\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      })\n    }\n\n    let form = formElementsArray.map(formElement => (\n      <Input\n        key={ formElement.id }\n        elementType={ formElement.config.elementType }\n        elementConfig={ formElement.config.elementConfig }\n        value={ formElement.config.value }\n        invalid={ !formElement.config.valid }\n        shouldValidate={ formElement.config.validation }\n        touched={ formElement.config.touched }\n        changed={ (event) => this.inputChangedHandler(event,formElement.id) }\n      />\n    ));\n\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = (\n        <p>{ this.props.error.message }</p>\n      )\n    }\n\n\n    return (\n      <div>\n        <h1>Auth</h1>\n\n        <Link>\n          <a href='/index'>Home</a>\n        </Link>\n\n        <div className={ classes.Auth }>\n          { authRedirect }\n          { errorMessage }\n          <form onSubmit={ this.submitHandler }>\n            { form }\n            <Button btnType=\"Success\">Submit</Button>\n          </form>\n          <Button\n            clicked={ this.switchAuthModeHandler }\n            btnType=\"Danger\"\n          >\n            SWITCH TO { this.state.isSignup ? 'SIGNIN' : 'SIGNUP' }\n          </Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.auth(username, password)),\n    onLogout: () => dispatch(actions.logout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}