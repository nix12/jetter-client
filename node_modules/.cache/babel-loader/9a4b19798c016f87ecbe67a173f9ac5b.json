{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../services/axios/defaultAxios';\nexport var registerStart = function registerStart() {\n  return {\n    type: actionTypes.REGISTER_START\n  };\n};\nexport var registerSuccess = function registerSuccess() {\n  return {\n    type: actionTypes.REGISTER_SUCCESS\n  };\n};\nexport var registerFail = function registerFail(error) {\n  return {\n    type: actionTypes.REGISTER_FAIL,\n    error: error\n  };\n};\nexport var register = function register(username, password, password_confirmation) {\n  return function (dispatch) {\n    dispatch(registerStart());\n    var url = '/api/users';\n    var registerData = {\n      username: username,\n      password: password,\n      password_confirmation: password,\n      client_id: process.env.CLIENT_ID,\n      client_secret: process.env.CLIENT_SECRET\n    };\n    axios.post(url, registerData).then(function (response) {\n      dispatch(registerSuccess());\n    }).catch(function (err) {\n      dispatch(registerFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/developer/Projects/jetter/client/store/actions/register.js"],"names":["actionTypes","axios","registerStart","type","REGISTER_START","registerSuccess","REGISTER_SUCCESS","registerFail","error","REGISTER_FAIL","register","username","password","password_confirmation","dispatch","url","registerData","client_id","process","env","CLIENT_ID","client_secret","CLIENT_SECRET","post","then","response","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAEH,WAAW,CAACM;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AACrC,SAAO;AACLL,IAAAA,IAAI,EAAEH,WAAW,CAACS,aADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWC,QAAX,EAAqBC,qBAArB,EAA+C;AACrE,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AAEA,QAAMa,GAAG,GAAG,YAAZ;AAEA,QAAMC,YAAY,GAAG;AACnBL,MAAAA,QAAQ,EAAEA,QADS;AAEnBC,MAAAA,QAAQ,EAAEA,QAFS;AAGnBC,MAAAA,qBAAqB,EAAED,QAHJ;AAInBK,MAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SAJJ;AAKnBC,MAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG;AALR,KAArB;AAQArB,IAAAA,KAAK,CAACsB,IAAN,CAAWR,GAAX,EAAgBC,YAAhB,EACGQ,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBX,MAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACD,KAHH,EAIGqB,KAJH,CAIS,UAAAC,GAAG,EAAI;AACZb,MAAAA,QAAQ,CAACP,YAAY,CAACoB,GAAD,CAAb,CAAR;AACD,KANH;AAOD,GApBD;AAqBD,CAtBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../services/axios/defaultAxios';\n\nexport const registerStart = () => {\n  return {\n    type: actionTypes.REGISTER_START,\n  }\n}\n\nexport const registerSuccess = () => {\n  return {\n    type: actionTypes.REGISTER_SUCCESS,\n  }\n}\n\nexport const registerFail = (error) => {\n  return {\n    type: actionTypes.REGISTER_FAIL,\n    error: error,\n  }\n}\n\nexport const register = (username, password, password_confirmation) => {\n  return dispatch => {\n    dispatch(registerStart());\n\n    const url = '/api/users';\n\n    const registerData = {\n      username: username,\n      password: password,\n      password_confirmation: password,\n      client_id: process.env.CLIENT_ID,\n      client_secret: process.env.CLIENT_SECRET,\n    }\n\n    axios.post(url, registerData)\n      .then(response => {\n        dispatch(registerSuccess());\n      })\n      .catch(err => {\n        dispatch(registerFail(err));\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}