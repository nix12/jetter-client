{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport * as actionTypes from './actionTypes';\nimport axios from '../../services/axios/axios-user';\nexport var userShow = function userShow(username) {\n  return {\n    type: actionTypes.USER_SHOW,\n    username: username\n  };\n};\nexport var show = function show(username) {\n  return function (dispatch) {\n    return new _Promise(function (resolve, reject) {\n      var url = \"/api/users/\".concat(username);\n      resolve(axios.get(url).then(function (response) {\n        console.log('show user', response); // return response.data\n\n        dispatch(userShow(response.data.username));\n      }));\n    });\n  };\n};\nexport var update = function update(username, current_password, password, password_confirmation) {\n  return function (dispatch) {\n    return new _Promise(function (resolve, reject) {\n      var url = \"/api/users/\".concat(username);\n      var userData = {\n        user: {\n          current_password: current_password,\n          password: password,\n          password_confirmation: password_confirmation\n        }\n      };\n      resolve(axios.put(url, userData).then(function (response) {\n        console.log('update response', response);\n      }).catch(function (err) {\n        console.log('update error', err.response);\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/home/developer/Projects/jetter/client/store/actions/user.js"],"names":["actionTypes","axios","userShow","username","type","USER_SHOW","show","dispatch","resolve","reject","url","get","then","response","console","log","data","update","current_password","password","password_confirmation","userData","user","put","catch","err"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,SADb;AAELF,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACH,QAAD;AAAA,SAAc,UAAAI,QAAQ;AAAA,WAAI,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7E,UAAMC,GAAG,wBAAkBP,QAAlB,CAAT;AAEAK,MAAAA,OAAO,CACLP,KAAK,CAACU,GAAN,CAAUD,GAAV,EACGE,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB,EADgB,CAEhB;;AACAN,QAAAA,QAAQ,CAACL,QAAQ,CAACW,QAAQ,CAACG,IAAT,CAAcb,QAAf,CAAT,CAAR;AACD,OALH,CADK,CAAP;AAQD,KAX6C,CAAJ;AAAA,GAAtB;AAAA,CAAb;AAaP,OAAO,IAAMc,MAAM,GAAG,SAATA,MAAS,CAACd,QAAD,EAAWe,gBAAX,EAA6BC,QAA7B,EAAuCC,qBAAvC;AAAA,SAAiE,UAAAb,QAAQ;AAAA,WAAI,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAClI,UAAMC,GAAG,wBAAkBP,QAAlB,CAAT;AACA,UAAMkB,QAAQ,GAAG;AACfC,QAAAA,IAAI,EAAE;AACJJ,UAAAA,gBAAgB,EAAEA,gBADd;AAEJC,UAAAA,QAAQ,EAAEA,QAFN;AAGJC,UAAAA,qBAAqB,EAAEA;AAHnB;AADS,OAAjB;AAQAZ,MAAAA,OAAO,CACLP,KAAK,CAACsB,GAAN,CAAUb,GAAV,EAAeW,QAAf,EACGT,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;AACD,OAHH,EAIGW,KAJH,CAIS,UAAAC,GAAG,EAAI;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BU,GAAG,CAACZ,QAAhC;AACD,OANH,CADK,CAAP;AASD,KAnBkG,CAAJ;AAAA,GAAzE;AAAA,CAAf","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../services/axios/axios-user';\n\nexport const userShow = (username) => {\n  return {\n    type: actionTypes.USER_SHOW,\n    username: username\n  }\n}\n\nexport const show = (username) => dispatch => new Promise((resolve, reject) => {\n  const url = `/api/users/${ username }`\n\n  resolve(\n    axios.get(url)\n      .then(response => {\n        console.log('show user', response)\n        // return response.data\n        dispatch(userShow(response.data.username));\n      })\n  )\n})\n\nexport const update = (username, current_password, password, password_confirmation) => dispatch => new Promise((resolve, reject) => {\n  const url = `/api/users/${ username }`\n  const userData = {\n    user: {\n      current_password: current_password,\n      password: password,\n      password_confirmation: password_confirmation,\n    } \n  }\n\n  resolve(\n    axios.put(url, userData)\n      .then(response => {\n        console.log('update response', response);\n      })\n      .catch(err => {\n        console.log('update error', err.response)\n      })\n  )\n})"]},"metadata":{},"sourceType":"module"}