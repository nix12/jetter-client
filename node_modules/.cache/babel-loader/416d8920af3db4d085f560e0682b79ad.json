{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/developer/Projects/jetter/client/pages/auth/index.js\";\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport ability from '../../shared/ability';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { updateObject, checkValidity } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\n\nvar Auth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Auth, _Component);\n\n  function Auth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Auth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      controls: {\n        username: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Username'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputChangedHandler\", function (event, controlName) {\n      var updatedControls = updateObject(_this.state.controls, _defineProperty({}, controlName, updateObject(_this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, _this.state.controls[controlName].validation),\n        touched: true\n      })));\n\n      _this.setState({\n        controls: updatedControls\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitHandler\", function (event) {\n      event.preventDefault();\n\n      _this.props.onAuth(_this.state.controls.username.value, _this.state.controls.password.value);\n    });\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('ability', ability);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      });\n\n      if (this.props.loading) {\n        form = React.createElement(CircularProgress, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      }\n\n      var errorMessage = null;\n\n      if (this.props.error) {\n        errorMessage = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, this.props.error.message);\n      }\n\n      var abilities = ability.rules.map(function (rule, index) {\n        return React.createElement(\"label\", {\n          key: index,\n          style: {\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"rule: \", ability.rules[index]);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Auth\"), React.createElement(Link, {\n        href: \"/index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, errorMessage, React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, form, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        style: {\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"ID: \", this.props.userId), React.createElement(\"label\", {\n        style: {\n          display: 'block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Username: \", this.props.username), abilities));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, isServer, pathname, query;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store, isServer = _ref.isServer, pathname = _ref.pathname, query = _ref.query;\n                return _context.abrupt(\"return\", {});\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Auth;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userId: state.auth.userId,\n    username: state.auth.username,\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(username, password) {\n      return dispatch(actions.auth(username, password));\n    },\n    onLogout: function onLogout() {\n      return dispatch(actions.logout());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/developer/Projects/jetter/client/pages/auth/index.js"],"names":["React","Component","Link","connect","ability","Input","Button","CircularProgress","updateObject","checkValidity","actions","Auth","controls","username","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","password","minLength","event","controlName","updatedControls","state","target","setState","preventDefault","props","onAuth","console","log","formElementsArray","key","push","id","config","form","map","formElement","inputChangedHandler","loading","errorMessage","error","message","abilities","rules","rule","index","display","submitHandler","userId","store","isServer","pathname","query","mapStateToProps","auth","isAuthenticated","token","mapDispatchToProps","dispatch","onLogout","logout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link'\nimport { connect } from 'react-redux';\nimport ability from '../../shared/ability';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { updateObject, checkValidity } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      username: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Username'\n        },\n        value: '',\n        validation: {\n          required: true,\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        touched: false\n      }\n    },\n  }\n\n  static async getInitialProps({store, isServer, pathname, query}) {\n    return {}\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]: updateObject(this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched: true\n      })\n    });\n\n    this.setState({ controls: updatedControls });\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(this.state.controls.username.value, this.state.controls.password.value);\n  }\n\n  componentDidMount() {\n    console.log('ability', ability)\n  }\n\n  render () {\n\n    const formElementsArray = []\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      })\n    }\n\n    let form = formElementsArray.map(formElement => (\n      <Input\n        key={ formElement.id }\n        elementType={ formElement.config.elementType }\n        elementConfig={ formElement.config.elementConfig }\n        value={ formElement.config.value }\n        invalid={ !formElement.config.valid }\n        shouldValidate={ formElement.config.validation }\n        touched={ formElement.config.touched }\n        changed={ (event) => this.inputChangedHandler(event,formElement.id) }\n      />\n    ));\n\n    if (this.props.loading) {\n      form = <CircularProgress />;\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = (\n        <p>{ this.props.error.message }</p>\n      )\n    }\n\n    let abilities = ability.rules.map((rule, index) => (\n        <label key={ index } style={{ display: 'block' }}>rule: { ability.rules[index] }</label>\n      )\n    );\n\n    return (\n      <div>\n        <h1>Auth</h1>\n\n        <Link href='/index'>\n          <a>Home</a>\n        </Link>\n\n        <div>\n          { errorMessage }\n          <form onSubmit={ this.submitHandler }>\n            { form }\n            <Button>Submit</Button>\n          </form>\n        </div>\n\n        <div>\n          <label style={{ display: 'block' }}>ID: { this.props.userId }</label>\n          <label style={{ display: 'block' }}>Username: { this.props.username }</label>\n          { abilities }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.auth.userId,\n    username: state.auth.username,\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) => dispatch(actions.auth(username, password)),\n    onLogout: () => dispatch(actions.logout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}