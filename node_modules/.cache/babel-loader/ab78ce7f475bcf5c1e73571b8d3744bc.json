{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/developer/Projects/jetter/client/components/UI/Input/Input.js\";\nimport React from 'react';\n\nvar input = function input(props) {\n  var inputElement = null;\n  var inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", _extends({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", _extends({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", _extends({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/home/developer/Projects/jetter/client/components/UI/Input/Input.js"],"names":["React","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","changed","Input","Label","label"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAMC,YAAY,GAAG,CAACC,OAAO,CAACC,YAAT,CAArB;;AAEA,MAAIJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,cAAvB,IAAyCN,KAAK,CAACO,OAAnD,EAA4D;AAC1DL,IAAAA,YAAY,CAACM,IAAb,CAAkBL,OAAO,CAACM,OAA1B;AACD;;AAED,UAAQT,KAAK,CAACU,WAAd;AACE,SAAM,OAAN;AACET,MAAAA,YAAY,GAAG;AACb,QAAA,SAAS,EAAGC,YAAY,CAACS,IAAb,CAAkB,GAAlB;AADC,SAERX,KAAK,CAACY,aAFE;AAGb,QAAA,KAAK,EAAGZ,KAAK,CAACa,KAHD;AAIb,QAAA,QAAQ,EAAGb,KAAK,CAACc,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAMA;;AACF,SAAM,UAAN;AACEb,MAAAA,YAAY,GAAG;AACb,QAAA,SAAS,EAAGC,YAAY,CAACS,IAAb,CAAkB,GAAlB;AADC,SAERX,KAAK,CAACY,aAFE;AAGb,QAAA,KAAK,EAAGZ,KAAK,CAACa,KAHD;AAIb,QAAA,QAAQ,EAAGb,KAAK,CAACc,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAMA;;AACA;AACAb,MAAAA,YAAY,GAAG;AACb,QAAA,SAAS,EAAGC,YAAY,CAACS,IAAb,CAAkB,GAAlB;AADC,SAERX,KAAK,CAACY,aAFE;AAGb,QAAA,KAAK,EAAGZ,KAAK,CAACa,KAHD;AAIb,QAAA,QAAQ,EAAGb,KAAK,CAACc,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAlBJ;;AA0BA,SACE;AAAK,IAAA,SAAS,EAAGX,OAAO,CAACY,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAGZ,OAAO,CAACa,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChB,KAAK,CAACiB,KAA3C,CADF,EAEIhB,YAFJ,CADF;AAMD,CAxCD;;AA0CA,eAAeF,KAAf","sourcesContent":["import React from 'react';\n\nconst input = (props) => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid)\n  }\n\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = <input\n        className={ inputClasses.join(' ') }\n        { ...props.elementConfig }\n        value={ props.value }\n        onChange={ props.changed }\n      />;\n      break;\n    case ('textarea'):\n      inputElement = <textarea\n        className={ inputClasses.join(' ') }\n        { ...props.elementConfig }\n        value={ props.value }\n        onChange={ props.changed }\n      />;\n      break;\n      default:\n      inputElement = <input\n        className={ inputClasses.join(' ') }\n        { ...props.elementConfig }\n        value={ props.value }\n        onChange={ props.changed }\n      />;\n  }\n\n  return (\n    <div className={ classes.Input }>\n      <label className={ classes.Label }>{ props.label }</label>\n      { inputElement }\n    </div>\n  );\n};\n\nexport default input;\n"]},"metadata":{},"sourceType":"module"}